####Letter Combinations

class Solution {
private:
    void solve(string digit, string output, int i, vector<string>& ans,
               string mapping[]) {
        if (i >= digit.length()) {
            ans.push_back(output);
            return;
        }

        int num = digit[i] - '0';
        string value = mapping[num];

        for (int j = 0; j < value.length(); j++) {
            output.push_back(value[j]);
            solve(digit, output, i + 1, ans, mapping);
            output.pop_back();
        }
    }

public:
    vector<string> letterCombinations(string digit) {
        vector<string> ans;
        if (digit.length() == 0) {
            return ans;
        }
        int i = 0;
        string output;
        string mapping[10] = {"",    "",    "abc",  "def", "ghi",
                              "jkl", "mno", "pqrs", "tuv", "wxyz"};
        solve(digit, output, i, ans, mapping);
        return ans;
    }
};

####Combination Sum

class Solution {
public:
void help(vector<int>& arr, int target,int idx, vector<vector<int>>&dp,vector<int>&temp)
{
    if(idx>=arr.size()||target<0)
    {
        return ;
    }
    if(target==0)
    {
        dp.push_back(temp);
        return ;
    }
    temp.push_back(arr[idx]);
    help(arr,target-arr[idx],idx,dp,temp);
    temp.pop_back();
    help(arr,target,idx+1,dp,temp);
}
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        vector<vector<int>>dp;
        vector<int>temp;
        help(candidates,target,0,dp,temp);
        return dp;
    }
};

####Permutations

class Solution {
public:
    vector<vector<int>> result;
    
    void permutation(vector<int> &nums,int i,int n){
        if(i==n){
            result.push_back(nums);
            return ;
        }

        for(int j=i;j<=n;j++){
            swap( nums[i],nums[j]);
            permutation(nums,i+1,n);
            swap( nums[i],nums[j]);
        }
    }
    
    vector<vector<int>> permute(vector<int>& nums) {
        
        permutation(nums,0,nums.size()-1);
        
        return result;
    }
};
